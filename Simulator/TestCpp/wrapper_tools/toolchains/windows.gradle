

model {

    toolChains 
    {
        visualCpp(VisualCpp) 
        {
            // Workaround for VS2015 adapted from https://github.com/couchbase/couchbase-lite-java-native/issues/23
            def VS_2015_INCLUDE_DIR = "C:/Program Files (x86)/Windows Kits/10/Include/10.0.10240.0/ucrt"
            def VS_2015_LIB_DIR = "C:/Program Files (x86)/Windows Kits/10/Lib/10.0.10240.0/ucrt"
            
            def JAVA_HOME= "C:/Program Files/Java/jdk1.8.0_73"

            eachPlatform {
                cppCompiler.withArguments { args ->
                    args << '/EHsc' << '/DNOMINMAX' << '/D_SCL_SECURE_NO_WARNINGS' << '/D_WINSOCK_DEPRECATED_NO_WARNINGS'
                    if (file(VS_2015_INCLUDE_DIR).exists()) {
                        args << "/I$VS_2015_INCLUDE_DIR"
                        args << "/I$JAVA_HOME/include"
                        args << "/I$JAVA_HOME/include/win32"
                    }
                }
                linker.withArguments { args ->
                    if (file(VS_2015_LIB_DIR).exists()) {
                        if (platform.architecture.name == 'x86') {
                            args << "/LIBPATH:$VS_2015_LIB_DIR/x86"
                        } else {
                            args << "/LIBPATH:$VS_2015_LIB_DIR/x64"
                        }
                    }
                }
            }
        }
    }
}

def defineExternalLibraries(wpilibBuildPath) {
    ext.wpilibcIncludePath       = wpilibBuildPath + "/cpp/wpilibc/include"
    ext.halIncludePath           = wpilibBuildPath + "/cpp/hal/include"
    ext.wpiIncludePath           = wpilibBuildPath + "/cpp/wpiutil/include"
    ext.networkTablesIncludePath = wpilibBuildPath + "/cpp/networktables/include"
    ext.niLibrariesIncludePath   = wpilibBuildPath + "/cpp/ni-libraries/include"
    
    ext.wpilibcLibraryPath       = wpilibBuildPath + '/native/x64/wpilibc.lib'
    ext.networkTablesLibraryPath = wpilibBuildPath + '/native/x64/ntcore.lib'
    ext.wpilibLibraryPath        = wpilibBuildPath + '/native/x64/wpiutil.lib'
    ext.halLibraryPath           = snobotSimBuildPath + '/native/x64/HALAthena.lib'
}



